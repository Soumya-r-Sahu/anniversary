plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    namespace "com.anniversary.anniversary_flutter"
    compileSdk 35  // Android 14 (API level 35)
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.anniversary.anniversary_flutter"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion 21  // Android 5.0 (minimum for modern Flutter)
        targetSdkVersion 34  // Android 14 (latest stable)
        compileSdkVersion 35  // Android 14
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        
        // Enable multidex support for larger apps
        multiDexEnabled true
          // Support for newer Android features
        vectorDrawables.useSupportLibrary = true
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
            
            // Enable ProGuard/R8 for code optimization
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            
            // Enable app bundle optimization
            ndk {
                debugSymbolLevel 'SYMBOL_TABLE'
            }
        }
        debug {
            signingConfig signingConfigs.debug
            debuggable true
        }
    }
    
    // Enable view binding and data binding for modern Android development
    buildFeatures {
        viewBinding true
        dataBinding true
    }
    
    // Optimize APK packaging
    packagingOptions {
        pickFirst '**/libc++_shared.so'
        pickFirst '**/libjsc.so'
    }
}

flutter {
    source '../..'
}

dependencies {
    // Android core libraries for modern Android compatibility
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.7.0'
    implementation 'androidx.activity:activity-compose:1.8.2'
    
    // Multidex support for larger apps
    implementation 'androidx.multidex:multidex:2.0.1'
    
    // Audio handling improvements for Android 13+
    implementation 'androidx.media:media:1.7.0'
    
    // Notification compatibility for Android 13+
    implementation 'androidx.core:core-splashscreen:1.0.1'
    
    // Security and permissions for modern Android
    implementation 'androidx.security:security-crypto:1.1.0-alpha06'
}
