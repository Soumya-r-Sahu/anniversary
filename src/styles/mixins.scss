@import "./variables.scss";

// Breakpoint mixins
@mixin mobile {
  @media (max-width: #{$breakpoint-sm - 1px}) {
    @content;
  }
}

@mixin tablet {
  @media (min-width: $breakpoint-sm) and (max-width: #{$breakpoint-lg - 1px}) {
    @content;
  }
}

@mixin desktop {
  @media (min-width: $breakpoint-lg) {
    @content;
  }
}

@mixin mobile-only {
  @media (max-width: #{$breakpoint-sm - 1px}) {
    @content;
  }
}

@mixin tablet-only {
  @media (min-width: $breakpoint-sm) and (max-width: #{$breakpoint-md - 1px}) {
    @content;
  }
}

@mixin desktop-only {
  @media (min-width: $breakpoint-md) {
    @content;
  }
}

// Utility mixins
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin text-gradient($gradient: $gradient-primary) {
  background: $gradient;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

@mixin glass-effect($opacity: 0.1, $blur: 10px) {
  background: rgba(255, 255, 255, $opacity);
  backdrop-filter: blur($blur);
  -webkit-backdrop-filter: blur($blur);
  border: 1px solid rgba(255, 255, 255, 0.2);
}

@mixin card-hover {
  transition: $transition-all;

  &:hover {
    transform: translateY(-4px);
    box-shadow: $shadow-xl;
  }
}

@mixin button-hover {
  transition: $btn-transition;

  &:hover {
    transform: translateY(-2px);
    box-shadow: $shadow-lg;
  }

  &:active {
    transform: translateY(0);
  }
}

@mixin heart-float($duration: 3s, $distance: 10px) {
  animation: heartFloat $duration ease-in-out infinite;

  @keyframes heartFloat {
    0%,
    100% {
      transform: translateY(0);
    }
    50% {
      transform: translateY(-$distance);
    }
  }
}

@mixin fade-in-up($duration: 0.8s, $delay: 0s) {
  opacity: 0;
  transform: translateY(30px);
  animation: fadeInUp $duration ease-out $delay forwards;

  @keyframes fadeInUp {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
}

@mixin pulse-glow($color: $color-primary, $intensity: 0.5) {
  animation: pulseGlow 2s ease-in-out infinite alternate;

  @keyframes pulseGlow {
    from {
      box-shadow: 0 0 10px rgba($color, $intensity);
    }
    to {
      box-shadow: 0 0 20px rgba($color, $intensity * 1.5);
    }
  }
}

@mixin romantic-gradient($opacity: 1) {
  background: linear-gradient(
    135deg,
    rgba(255, 107, 157, $opacity) 0%,
    rgba(255, 168, 204, $opacity) 50%,
    rgba(255, 179, 214, $opacity) 100%
  );
}

@mixin celebration-gradient($opacity: 1) {
  background: linear-gradient(
    135deg,
    rgba(251, 191, 36, $opacity) 0%,
    rgba(245, 158, 11, $opacity) 50%,
    rgba(217, 119, 6, $opacity) 100%
  );
}

@mixin particle-animation($duration: 20s) {
  animation: particleFloat $duration linear infinite;

  @keyframes particleFloat {
    0% {
      transform: translateY(100vh) rotate(0deg);
      opacity: 0;
    }
    10% {
      opacity: 1;
    }
    90% {
      opacity: 1;
    }
    100% {
      transform: translateY(-10vh) rotate(360deg);
      opacity: 0;
    }
  }
}

@mixin bubble-burst($count: 8) {
  @for $i from 1 through $count {
    &:nth-child(#{$i}) {
      $angle: (360deg / $count) * ($i - 1);
      animation: bubbleBurst 2s ease-out forwards;
      animation-delay: $i * 0.1s;

      @keyframes bubbleBurst {
        0% {
          transform: scale(0) rotate(0deg);
          opacity: 1;
        }
        50% {
          transform: scale(1.2) rotate($angle) translateX(50px);
          opacity: 1;
        }
        100% {
          transform: scale(0) rotate($angle) translateX(100px);
          opacity: 0;
        }
      }
    }
  }
}

@mixin typewriter($steps: 20, $duration: 3s) {
  overflow: hidden;
  border-right: 3px solid $color-primary;
  white-space: nowrap;
  animation:
    typewriter $duration steps($steps, end),
    blink 0.8s ease-in-out infinite;

  @keyframes typewriter {
    from {
      width: 0;
    }
    to {
      width: 100%;
    }
  }

  @keyframes blink {
    from,
    to {
      border-color: transparent;
    }
    50% {
      border-color: $color-primary;
    }
  }
}

@mixin shimmer-effect($duration: 2s) {
  background: linear-gradient(
    90deg,
    transparent,
    rgba(255, 255, 255, 0.2),
    transparent
  );
  background-size: 200% 100%;
  animation: shimmer $duration infinite;

  @keyframes shimmer {
    0% {
      background-position: -200% 0;
    }
    100% {
      background-position: 200% 0;
    }
  }
}

@mixin photo-hover {
  transition: $transition-all;

  &:hover {
    transform: scale(1.05) rotate(2deg);
    box-shadow: $shadow-2xl;
    filter: brightness(1.1) saturate(1.2);
  }
}

@mixin music-visualizer($bars: 4) {
  display: flex;
  gap: 2px;
  align-items: end;

  @for $i from 1 through $bars {
    .bar:nth-child(#{$i}) {
      animation: musicBounce 0.6s ease-in-out infinite alternate;
      animation-delay: $i * 0.1s;
    }
  }

  @keyframes musicBounce {
    0% {
      height: 4px;
      transform: scaleY(0.4);
    }
    100% {
      height: 16px;
      transform: scaleY(1);
    }
  }
}

@mixin loading-dots($count: 3) {
  display: flex;
  gap: 4px;

  @for $i from 1 through $count {
    .dot:nth-child(#{$i}) {
      animation: loadingBounce 1.2s ease-in-out infinite;
      animation-delay: $i * 0.2s;
    }
  }

  @keyframes loadingBounce {
    0%,
    80%,
    100% {
      transform: scale(0);
    }
    40% {
      transform: scale(1);
    }
  }
}

// Performance optimizations
@mixin will-change($property) {
  will-change: $property;
}

@mixin gpu-accelerated {
  transform: translate3d(0, 0, 0);
  backface-visibility: hidden;
  perspective: 1000px;
}

@mixin contain-layout {
  contain: layout style paint;
}

// Accessibility mixins
@mixin sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

@mixin focus-ring($color: $color-primary, $offset: 2px) {
  &:focus {
    outline: 2px solid $color;
    outline-offset: $offset;
  }
}

@mixin high-contrast {
  @media (prefers-contrast: high) {
    @content;
  }
}

@mixin reduced-motion {
  @media (prefers-reduced-motion: reduce) {
    @content;
  }
}
